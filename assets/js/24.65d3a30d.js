(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{306:function(v,_,t){"use strict";t.r(_);var i=t(10),r=Object(i.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"页面性能优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#页面性能优化"}},[v._v("#")]),v._v(" 页面性能优化")]),v._v(" "),_("p",[v._v("前端性能优化可以分为两大部分，浏览器和代码部分"),_("br"),v._v("\n浏览器部分又可以分为:")]),v._v(" "),_("ul",[_("li",[v._v("网络层面")]),v._v(" "),_("li",[v._v("浏览器渲染层面")]),v._v(" "),_("li",[v._v("服务端层面")])]),v._v(" "),_("p",[v._v("代码部分又可以分为:")]),v._v(" "),_("ul",[_("li",[v._v("构建层面")]),v._v(" "),_("li",[v._v("编码层面")]),v._v(" "),_("li",[v._v("机制(SSR,英文 Server Side Render：服务端渲染)")]),v._v(" "),_("li",[v._v("规范\n首先看看浏览器部分，前端页面主要在浏览器上运行，那么我们追根溯源，从浏览器的原理开始，研究如何进行页面性能优化")])]),v._v(" "),_("h2",{attrs:{id:"浏览器组成部分"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器组成部分"}},[v._v("#")]),v._v(" 浏览器组成部分")]),v._v(" "),_("ol",[_("li",[v._v("用户界面")]),v._v(" "),_("li",[v._v("浏览器引擎（browser engine）- 在用户界面和渲染引擎之间传递指令")]),v._v(" "),_("li",[_("strong",[v._v("渲染引擎")]),v._v("（rendering engine）- 负责显示请求的内容\n浏览器（Firefox、chrome、Safari）是基于两种渲染引擎构建的，Firefox 使用的是 Gecko 引擎，chrome 和 Safari 使用的是 Webkit 引擎，Webkit 引擎又分为渲染引擎和 JS 引擎，渲染引擎负责显示请求的内容，JS 引擎负责解析和执行 JS 代码")]),v._v(" "),_("li",[v._v("网络（Networking）- 用于网络调用，比如 HTTP 请求")]),v._v(" "),_("li",[v._v("UI 后端（UI Backend）- 用于绘制基本的窗口小部件，比如组合框和窗口")]),v._v(" "),_("li",[v._v("Javascript 解释器（Javascript Interpreter）- 用于解析和执行 Javascript 代码，如 V8 引擎\njs 引擎线层负责解析 javascript 脚本,运行代码。\n"),_("strong",[v._v("JS 引擎一直等待任务队列中任务的到来，然后加以处理，一个 Tab 页面中只有一个 js 线层在运行")])]),v._v(" "),_("li",[v._v("数据存储（data storage）- 负责将渲染引擎输出的内容进行持久化存储，例如 cookie，新的 HTML5 定义了网络数据库，这是一个完成的浏览器内数据库")])]),v._v(" "),_("h2",{attrs:{id:"浏览器是多进程的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器是多进程的"}},[v._v("#")]),v._v(" 浏览器是多进程的")]),v._v(" "),_("p",[v._v("进程线层简单理解，进程里面可以有多个线层，进程是 QQ，线层是会话")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("浏览器是多进程的")])]),v._v(" "),_("li",[_("p",[v._v("浏览器之所以能够运行，是因为系统给他的进程分配了资源(CPU、内存、磁盘)")])]),v._v(" "),_("li",[_("p",[v._v("简单理解每打开一个 Tab 页，就相当于创建了一个独立的浏览器进程\n浏览器里面的进程：")]),v._v(" "),_("p",[v._v("1.Browser 进程，浏览器的主要进程（负责协调和主控），只有一个。作用有：")])]),v._v(" "),_("li",[_("p",[v._v("负责浏览器界面显示，与用户交互。如前进、后退等")])]),v._v(" "),_("li",[_("p",[v._v("负责各个页面的管理，创建和销毁其他进程")])]),v._v(" "),_("li",[_("p",[v._v("将 Renderer 进程得到的内存中的 Bitmap，绘制到用户界面上")])]),v._v(" "),_("li",[_("p",[v._v("网络资源的管理，下载等")])])]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[v._v("第三方插件进程，每种类型的插件对应一个进程，多个插件进程可能同时存在。仅当使用了该插件才创建")]),v._v(" "),_("li",[v._v("GPU 进程，最多一个，用于 3D 绘制等")]),v._v(" "),_("li",[v._v("浏览器渲染进程（浏览器内核），内部是多线层的")])]),v._v(" "),_("ul",[_("li",[v._v("默认每个 Tab 页面一个进程，互不影响")]),v._v(" "),_("li",[v._v("主要作用为页面渲染，脚本执行，事件处理等")])]),v._v(" "),_("p",[v._v("渲染进程是多线层的：")]),v._v(" "),_("ol",[_("li",[v._v("GUI 渲染线层")])]),v._v(" "),_("ul",[_("li",[v._v("负责渲染浏览器界面，解析 HTML，CSS，构建 DOM 树和 RenderObject 树，布局和绘制等")]),v._v(" "),_("li",[v._v("当界面需要重绘制（Repaint）或某种操作引发的回流（Reflow），该线层就会执行")]),v._v(" "),_("li",[v._v("注意，GUI 渲染线程与 JS 引擎线程是互斥的，当 JS 引擎执行时 GUI 线程会被挂起（相当于被冻结了），GUI 更新会被保存在一个队列中等到 JS 引擎空闲时立即被执行。")])]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[v._v("JS 引擎线层")])]),v._v(" "),_("ul",[_("li",[v._v("也称为 JS 内核，负责处理 Javascript 脚本程序（包括解析和执行），例如 V8 引擎")]),v._v(" "),_("li",[v._v("JS 引擎线层负责解析 JS 脚本，运行代码")]),v._v(" "),_("li",[v._v("JS 引擎一直等待任务队列中任务的到来，然后加以处理，一个 Tab 页面中只有一个 JS 引擎在运行")]),v._v(" "),_("li",[v._v("注意，GUI 渲染线程与 JS 引擎线程是互斥的，所以如果 JS 执行的时间过长，要放在 Body 下面，负责会导致页面渲染加载阻塞")])]),v._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[v._v("事件触发线程")])]),v._v(" "),_("ul",[_("li",[v._v("管理事件队列")]),v._v(" "),_("li",[v._v("监听事件，符合条件时把回调函数放入事件队列中")])]),v._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[v._v("定时触发器线层")])]),v._v(" "),_("ul",[_("li",[v._v("setInterval 与 setTimeout 在此线层中计时完毕，把回调函数放入事件队列")]),v._v(" "),_("li",[v._v("浏览器定时计数并不是由 Javascript 引擎计数的，由单独的定时计数器线程来计时，计时完毕后，添加到事件队列中，等待 JS 引擎空闲时执行（因为 Javascript 引擎是单线程的，如果处于阻塞线层状态就会影响计时的准确，因此通过单独的线层来计时并触发定时（计时完毕后，添加到时间队列中，等待 JS 引擎空闲后执行）")])]),v._v(" "),_("ol",{attrs:{start:"5"}},[_("li",[v._v("异步 http 请求线程")])]),v._v(" "),_("ul",[_("li",[_("p",[v._v("检测 XHR 对象状态的变化时，将回调函数添加到事件队列中")])]),v._v(" "),_("li",[_("p",[v._v("将检测到状态更新时，如果设置回调函数，异步线层就产生状态变更事件，将这个回调再放入事件队列中，由 javascript 引擎")]),v._v(" "),_("p",[v._v("了解一下执行线:")])])]),v._v(" "),_("h2",{attrs:{id:"浏览器渲染机制简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染机制简介"}},[v._v("#")]),v._v(" 浏览器渲染机制简介")]),v._v(" "),_("p",[v._v("对于渲染，我们首先需要了解一个概念，设备刷新率。")]),v._v(" "),_("p",[v._v("设备刷新率是设备屏幕的渲染频率，通俗一点就是，把屏幕当作墙，设备刷新率就是多久刷新一次墙面，几本我们平常接触的设备，如手机、电脑等，刷新率一般为 60Hz，即每秒刷新 60 次。约 16.7ms 渲染一次屏幕"),_("br"),v._v("\n这就意味着，我们的浏览器最佳的渲染性能就是所有的操作都在 16.7ms 内完成，如果做到一帧内完成，那么浏览器渲染性能就最佳了。")]),v._v(" "),_("p",[v._v("渲染引擎一开始会从网络层获取请求文档的内容，内容大小一般限制在 8000 块以内"),_("br"),v._v("\n然后进行如下所示的几本流程:\n"),_("img",{attrs:{src:"/browser02.png",alt:"browser"}}),v._v("\n渲染引擎开始解析 HTML 文档，并将各标记逐个转化成“内容树”上的 DOM 节点，同时解析外部 CSS 文件以及样式元素中的数据。HTML 中这些带有视觉指令的样式信息将用于创建另一个树结构，呈现树。\n呈现树包含多个带有视觉属性(颜色和尺寸)的矩形，这些矩形的排列顺序就是它们将要在页面上的显示顺序。")])])}),[],!1,null,null,null);_.default=r.exports}}]);